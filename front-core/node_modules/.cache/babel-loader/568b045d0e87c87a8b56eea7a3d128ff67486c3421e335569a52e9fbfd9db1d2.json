{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mialy\\\\Documents\\\\GitHub\\\\cuisine-vital\\\\front-core\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { GoogleMap, useJsApiLoader, Polyline, Marker } from '@react-google-maps/api';\nimport './App.css';\n\n// --- CONFIGURATION ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3000'; // L'URL de votre backend NestJS\n\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '70vh'\n};\nconst mapCenter = {\n  // Centre initial de la carte (Paris)\n  lat: 48.8566,\n  lng: 2.3522\n};\n\n// --- Fonctions utilitaires ---\nconst parseCoords = localisation => {\n  if (!localisation) return null;\n  // Convertit \"Point(long lat)\" en { lat, lng }\n  const [lng, lat] = localisation.replace('Point(', '').replace(')', '').split(' ');\n  return {\n    lat: parseFloat(lat),\n    lng: parseFloat(lng)\n  };\n};\nfunction App() {\n  _s();\n  var _routeData$livraisons, _routeData$livraisons2;\n  const [livreurs, setLivreurs] = useState([]);\n  const [selectedLivreurId, setSelectedLivreurId] = useState('');\n  const [routeData, setRouteData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // 1. Charger l'API Google Maps\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: ['geometry'] // Important pour décoder la polyline\n  });\n\n  // 2. Récupérer la liste des livreurs au chargement\n  useEffect(() => {\n    axios.get(`${API_BASE_URL}/livreur`).then(response => {\n      setLivreurs(response.data);\n      if (response.data.length > 0) {\n        setSelectedLivreurId(response.data[0].id); // Sélectionner le premier par défaut\n      }\n    }).catch(err => setError('Erreur lors de la récupération des livreurs.'));\n  }, []);\n\n  // 3. Fonction pour calculer l'itinéraire\n  const handleCalculateRoute = () => {\n    if (!selectedLivreurId) return;\n    setIsLoading(true);\n    setError('');\n    setRouteData(null);\n    axios.get(`${API_BASE_URL}/livreur/${selectedLivreurId}/itineraire`).then(response => {\n      setRouteData(response.data);\n    }).catch(err => {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Une erreur est survenue.');\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  // 4. Décoder la polyline une fois qu'elle est reçue\n  const decodedPath = useMemo(() => {\n    if (!(routeData !== null && routeData !== void 0 && routeData.geometrieItineraire) || !window.google) return [];\n    return window.google.maps.geometry.encoding.decodePath(routeData.geometrieItineraire);\n  }, [routeData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Calculateur d'Itin\\xE9raire Livreur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedLivreurId,\n          onChange: e => setSelectedLivreurId(e.target.value),\n          disabled: isLoading,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- S\\xE9lectionnez un livreur --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), livreurs.map(livreur => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: livreur.id,\n            children: [livreur.prenom, \" \", livreur.nom]\n          }, livreur.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCalculateRoute,\n          disabled: isLoading || !selectedLivreurId,\n          children: isLoading ? 'Calcul en cours...' : \"Calculer l'itinéraire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        center: mapCenter,\n        zoom: 12,\n        children: [decodedPath.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n          path: decodedPath,\n          options: {\n            strokeColor: '#FF0000',\n            strokeWeight: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), routeData === null || routeData === void 0 ? void 0 : (_routeData$livraisons = routeData.livraisonsDansOrdre) === null || _routeData$livraisons === void 0 ? void 0 : _routeData$livraisons.map((livraison, index) => {\n          const position = parseCoords(livraison.localisation);\n          return position ? /*#__PURE__*/_jsxDEV(Marker, {\n            position: position,\n            label: `${index + 1}`,\n            title: `${index + 1}. ${livraison.adresse}`\n          }, livraison.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this) : null;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Chargement de la carte...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), routeData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"R\\xE9sultats de l'itin\\xE9raire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Distance totale:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 16\n          }, this), \" \", (routeData.distanceTotaleMetres / 1000).toFixed(2), \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Dur\\xE9e estim\\xE9e:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 16\n          }, this), \" \", Math.round(routeData.dureeTotaleSecondes / 60), \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ordre des livraisons:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: (_routeData$livraisons2 = routeData.livraisonsDansOrdre) === null || _routeData$livraisons2 === void 0 ? void 0 : _routeData$livraisons2.map(l => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: l.adresse\n          }, l.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3kkzJMi9kIC1/3ZzzFLmzpsowmA=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","GoogleMap","useJsApiLoader","Polyline","Marker","jsxDEV","_jsxDEV","API_BASE_URL","mapContainerStyle","width","height","mapCenter","lat","lng","parseCoords","localisation","replace","split","parseFloat","App","_s","_routeData$livraisons","_routeData$livraisons2","livreurs","setLivreurs","selectedLivreurId","setSelectedLivreurId","routeData","setRouteData","isLoading","setIsLoading","error","setError","isLoaded","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","get","then","response","data","length","catch","err","handleCalculateRoute","_err$response","_err$response$data","message","finally","decodedPath","geometrieItineraire","window","google","maps","geometry","encoding","decodePath","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","disabled","map","livreur","prenom","nom","onClick","center","zoom","path","options","strokeColor","strokeWeight","livraisonsDansOrdre","livraison","index","position","label","title","adresse","distanceTotaleMetres","toFixed","Math","round","dureeTotaleSecondes","l","_c","$RefreshReg$"],"sources":["C:/Users/Mialy/Documents/GitHub/cuisine-vital/front-core/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { GoogleMap, useJsApiLoader, Polyline, Marker } from '@react-google-maps/api';\r\nimport './App.css';\r\n\r\n// --- CONFIGURATION ---\r\nconst API_BASE_URL = 'http://localhost:3000'; // L'URL de votre backend NestJS\r\n\r\nconst mapContainerStyle = {\r\n  width: '100vw',\r\n  height: '70vh',\r\n};\r\nconst mapCenter = { // Centre initial de la carte (Paris)\r\n  lat: 48.8566,\r\n  lng: 2.3522,\r\n};\r\n\r\n// --- Fonctions utilitaires ---\r\nconst parseCoords = (localisation) => {\r\n  if (!localisation) return null;\r\n  // Convertit \"Point(long lat)\" en { lat, lng }\r\n  const [lng, lat] = localisation.replace('Point(', '').replace(')', '').split(' ');\r\n  return { lat: parseFloat(lat), lng: parseFloat(lng) };\r\n};\r\n\r\nfunction App() {\r\n  const [livreurs, setLivreurs] = useState([]);\r\n  const [selectedLivreurId, setSelectedLivreurId] = useState('');\r\n  const [routeData, setRouteData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // 1. Charger l'API Google Maps\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries: ['geometry'], // Important pour décoder la polyline\r\n  });\r\n\r\n  // 2. Récupérer la liste des livreurs au chargement\r\n  useEffect(() => {\r\n    axios.get(`${API_BASE_URL}/livreur`)\r\n      .then(response => {\r\n        setLivreurs(response.data);\r\n        if (response.data.length > 0) {\r\n          setSelectedLivreurId(response.data[0].id); // Sélectionner le premier par défaut\r\n        }\r\n      })\r\n      .catch(err => setError('Erreur lors de la récupération des livreurs.'));\r\n  }, []);\r\n\r\n  // 3. Fonction pour calculer l'itinéraire\r\n  const handleCalculateRoute = () => {\r\n    if (!selectedLivreurId) return;\r\n\r\n    setIsLoading(true);\r\n    setError('');\r\n    setRouteData(null);\r\n\r\n    axios.get(`${API_BASE_URL}/livreur/${selectedLivreurId}/itineraire`)\r\n      .then(response => {\r\n        setRouteData(response.data);\r\n      })\r\n      .catch(err => {\r\n        setError(err.response?.data?.message || 'Une erreur est survenue.');\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  // 4. Décoder la polyline une fois qu'elle est reçue\r\n  const decodedPath = useMemo(() => {\r\n    if (!routeData?.geometrieItineraire || !window.google) return [];\r\n    return window.google.maps.geometry.encoding.decodePath(routeData.geometrieItineraire);\r\n  }, [routeData]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Calculateur d'Itinéraire Livreur</h1>\r\n        <div className=\"controls\">\r\n          <select \r\n            value={selectedLivreurId} \r\n            onChange={(e) => setSelectedLivreurId(e.target.value)}\r\n            disabled={isLoading}\r\n          >\r\n            <option value=\"\">-- Sélectionnez un livreur --</option>\r\n            {livreurs.map(livreur => (\r\n              <option key={livreur.id} value={livreur.id}>\r\n                {livreur.prenom} {livreur.nom}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button onClick={handleCalculateRoute} disabled={isLoading || !selectedLivreurId}>\r\n            {isLoading ? 'Calcul en cours...' : \"Calculer l'itinéraire\"}\r\n          </button>\r\n        </div>\r\n        {error && <p className=\"error\">{error}</p>}\r\n      </header>\r\n\r\n      <main>\r\n        {isLoaded ? (\r\n          <GoogleMap\r\n            mapContainerStyle={mapContainerStyle}\r\n            center={mapCenter}\r\n            zoom={12}\r\n          >\r\n            {/* Affiche le tracé de la route */}\r\n            {decodedPath.length > 0 && (\r\n              <Polyline\r\n                path={decodedPath}\r\n                options={{ strokeColor: '#FF0000', strokeWeight: 4 }}\r\n              />\r\n            )}\r\n\r\n            {/* Affiche les marqueurs pour chaque livraison */}\r\n            {routeData?.livraisonsDansOrdre?.map((livraison, index) => {\r\n              const position = parseCoords(livraison.localisation);\r\n              return position ? (\r\n                <Marker\r\n                  key={livraison.id}\r\n                  position={position}\r\n                  label={`${index + 1}`}\r\n                  title={`${index + 1}. ${livraison.adresse}`}\r\n                />\r\n              ) : null;\r\n            })}\r\n          </GoogleMap>\r\n        ) : <div>Chargement de la carte...</div>}\r\n\r\n        {routeData && (\r\n          <div className=\"results\">\r\n            <h2>Résultats de l'itinéraire</h2>\r\n            <p><strong>Distance totale:</strong> {(routeData.distanceTotaleMetres / 1000).toFixed(2)} km</p>\r\n            <p><strong>Durée estimée:</strong> {Math.round(routeData.dureeTotaleSecondes / 60)} minutes</p>\r\n            <h3>Ordre des livraisons:</h3>\r\n            <ol>\r\n              {routeData.livraisonsDansOrdre?.map(l => (\r\n                <li key={l.id}>{l.adresse}</li>\r\n              ))}\r\n            </ol>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}