{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mialy\\\\Documents\\\\GitHub\\\\cuisine-vital\\\\front-core\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, useJsApiLoader, DirectionsRenderer, Marker } from '@react-google-maps/api';\nimport './App.css';\n\n// --- Données simulées ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockLivreurs = [{\n  id: \"11111111-1111-1111-1111-111111111111\",\n  nom: \"Rabe\",\n  prenom: \"Koto\"\n}, {\n  id: \"22222222-2222-2222-2222-222222222222\",\n  nom: \"Rakoto\",\n  prenom: \"Fara\"\n}];\nconst mockRouteData = {\n  livraisonsDansOrdre: [{\n    id: \"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\",\n    adresse: \"Palais de la Reine (Rova), Antananarivo\",\n    statut: \"ASSIGNEE\",\n    localisation: \"Point(47.5323 -18.9227)\"\n  }, {\n    id: \"dddddddd-dddd-dddd-dddd-dddddddddddd\",\n    adresse: \"Gare de Soarano, Antananarivo\",\n    statut: \"ASSIGNEE\",\n    localisation: \"Point(47.5222 -18.9038)\"\n  }, {\n    id: \"bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb\",\n    adresse: \"Marché d'Analakely, Antananarivo\",\n    statut: \"ASSIGNEE\",\n    localisation: \"Point(47.5255 -18.9069)\"\n  }, {\n    id: \"cccccccc-cccc-cccc-cccc-cccccccccccc\",\n    adresse: \"Lac Anosy, Antananarivo\",\n    statut: \"ASSIGNEE\",\n    localisation: \"Point(47.5186 -18.9171)\"\n  }],\n  distanceTotaleMetres: 6133,\n  dureeTotaleSecondes: 1245\n};\n\n// --- CONFIGURATION DE LA CARTE ---\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '70vh'\n};\nconst antananarivoCenter = {\n  lat: -18.9144,\n  lng: 47.5317\n}; // Centre d'Antananarivo\n\n// --- FONCTION UTILITAIRE ---\nconst parseCoords = localisation => {\n  if (!localisation) return null;\n  const match = localisation.match(/Point\\(([+-]?\\d*\\.?\\d+)\\s+([+-]?\\d*\\.?\\d+)\\)/);\n  if (!match) return null;\n  return {\n    lat: parseFloat(match[2]),\n    lng: parseFloat(match[1])\n  };\n};\nfunction App() {\n  _s();\n  var _routeData$livraisons, _routeData$livraisons2;\n  const [map, setMap] = useState(null);\n  const [livreurs, setLivreurs] = useState([]);\n  const [selectedLivreurId, setSelectedLivreurId] = useState('');\n  const [routeData, setRouteData] = useState(null);\n  const [directionsResult, setDirectionsResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // 1. Charger l'API Google Maps\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyAOVYRIgupAurZup5y1PRh8Ismb1A3lLao',\n    libraries: ['directions']\n  });\n\n  // 2. Charger les livreurs simulés au démarrage\n  useEffect(() => {\n    setLivreurs(mockLivreurs);\n    if (mockLivreurs.length > 0) {\n      setSelectedLivreurId(mockLivreurs[0].id);\n    }\n  }, []);\n\n  // 3. Calculer l'itinéraire avec l'API Directions\n  const calculateDirections = useCallback(async deliveries => {\n    if (!isLoaded || !window.google || deliveries.length < 2) return;\n    const directionsService = new window.google.maps.DirectionsService();\n\n    // Premier point comme origine\n    const origin = parseCoords(deliveries[0].localisation);\n    // Dernier point comme destination\n    const destination = parseCoords(deliveries[deliveries.length - 1].localisation);\n    // Points intermédiaires\n    const waypoints = deliveries.slice(1, -1).map(delivery => ({\n      location: parseCoords(delivery.localisation),\n      stopover: true\n    }));\n    try {\n      const result = await new Promise((resolve, reject) => {\n        directionsService.route({\n          origin: origin,\n          destination: destination,\n          waypoints: waypoints,\n          travelMode: window.google.maps.TravelMode.DRIVING,\n          optimizeWaypoints: false,\n          // Garder l'ordre défini\n          region: 'MG' // Madagascar\n        }, (response, status) => {\n          if (status === 'OK') {\n            resolve(response);\n          } else {\n            reject(new Error('Erreur lors du calcul de l\\'itinéraire: ' + status));\n          }\n        });\n      });\n      setDirectionsResult(result);\n      setError('');\n\n      // Ajuster la vue de la carte sur l'itinéraire\n      if (map && result.routes[0]) {\n        const bounds = new window.google.maps.LatLngBounds();\n        result.routes[0].legs.forEach(leg => {\n          leg.steps.forEach(step => {\n            bounds.extend(step.start_location);\n            bounds.extend(step.end_location);\n          });\n        });\n        map.fitBounds(bounds);\n      }\n    } catch (err) {\n      console.error('Erreur directions:', err);\n      setError('Impossible de calculer l\\'itinéraire: ' + err.message);\n      setDirectionsResult(null);\n    }\n  }, [isLoaded, map]);\n\n  // 4. Gérer le clic sur le bouton\n  const handleCalculateRoute = async () => {\n    if (!selectedLivreurId || !isLoaded) return;\n    setIsLoading(true);\n    setError('');\n    setDirectionsResult(null);\n    setRouteData(null);\n\n    // Simulation du délai réseau\n    setTimeout(async () => {\n      if (selectedLivreurId === '11111111-1111-1111-1111-111111111111') {\n        setRouteData(mockRouteData);\n        // Calculer l'itinéraire réel avec l'API Directions\n        await calculateDirections(mockRouteData.livraisonsDansOrdre);\n      } else {\n        setError('Aucun itinéraire à calculer pour ce livreur.');\n      }\n      setIsLoading(false);\n    }, 500);\n  };\n\n  // 5. Fonctions pour gérer l'instance de la carte\n  const onLoad = useCallback(function callback(mapInstance) {\n    setMap(mapInstance);\n  }, []);\n  const onUnmount = useCallback(function callback() {\n    setMap(null);\n  }, []);\n\n  // 6. Options pour le rendu des directions\n  const directionsOptions = {\n    suppressMarkers: true,\n    // On va afficher nos propres marqueurs\n    polylineOptions: {\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 5\n    }\n  };\n\n  // 7. Rendu du composant\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Calculateur d'Itin\\xE9raire Livreur - Antananarivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedLivreurId,\n          onChange: e => setSelectedLivreurId(e.target.value),\n          disabled: isLoading,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- S\\xE9lectionnez un livreur --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), livreurs.map(livreur => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: livreur.id,\n            children: [livreur.prenom, \" \", livreur.nom]\n          }, livreur.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCalculateRoute,\n          disabled: isLoading || !selectedLivreurId || !isLoaded,\n          children: isLoading ? 'Calcul en cours...' : \"Calculer l'itinéraire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        style: {\n          color: 'red',\n          margin: '10px 0'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }, this), !isLoaded && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement de l'API Google Maps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        center: antananarivoCenter,\n        zoom: 13,\n        onLoad: onLoad,\n        onUnmount: onUnmount,\n        options: {\n          restriction: {\n            latLngBounds: {\n              north: -18.8,\n              south: -19.0,\n              east: 47.7,\n              west: 47.3\n            },\n            strictBounds: false\n          }\n        },\n        children: [directionsResult && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n          directions: directionsResult,\n          options: directionsOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this), routeData === null || routeData === void 0 ? void 0 : (_routeData$livraisons = routeData.livraisonsDansOrdre) === null || _routeData$livraisons === void 0 ? void 0 : _routeData$livraisons.map((livraison, index) => {\n          var _window$google, _window$google$maps, _window$google$maps$S;\n          const position = parseCoords(livraison.localisation);\n          if (!position) return null;\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: position,\n            label: {\n              text: `${index + 1}`,\n              color: 'white',\n              fontWeight: 'bold',\n              fontSize: '14px'\n            },\n            title: `${index + 1}. ${livraison.adresse}`,\n            icon: {\n              path: ((_window$google = window.google) === null || _window$google === void 0 ? void 0 : (_window$google$maps = _window$google.maps) === null || _window$google$maps === void 0 ? void 0 : (_window$google$maps$S = _window$google$maps.SymbolPath) === null || _window$google$maps$S === void 0 ? void 0 : _window$google$maps$S.CIRCLE) || 0,\n              fillColor: index === 0 ? '#00FF00' : index === routeData.livraisonsDansOrdre.length - 1 ? '#FF0000' : '#4285F4',\n              fillOpacity: 1,\n              strokeColor: 'white',\n              strokeWeight: 2,\n              scale: 15\n            }\n          }, livraison.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '70vh',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Chargement de la carte...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), routeData && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        style: {\n          padding: '20px',\n          backgroundColor: '#f5f5f5',\n          margin: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"R\\xE9sultats de l'itin\\xE9raire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr',\n            gap: '20px',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Distance simul\\xE9e:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 20\n              }, this), \" \", (routeData.distanceTotaleMetres / 1000).toFixed(2), \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Dur\\xE9e simul\\xE9e:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 20\n              }, this), \" \", Math.round(routeData.dureeTotaleSecondes / 60), \" minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), directionsResult && directionsResult.routes[0] && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Distance r\\xE9elle:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 22\n              }, this), \" \", (directionsResult.routes[0].legs.reduce((total, leg) => total + leg.distance.value, 0) / 1000).toFixed(2), \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Dur\\xE9e r\\xE9elle:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 22\n              }, this), \" \", Math.round(directionsResult.routes[0].legs.reduce((total, leg) => total + leg.duration.value, 0) / 60), \" minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ordre des livraisons:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            lineHeight: '1.6'\n          },\n          children: (_routeData$livraisons2 = routeData.livraisonsDansOrdre) === null || _routeData$livraisons2 === void 0 ? void 0 : _routeData$livraisons2.map((livraison, index) => {\n            const coords = parseCoords(livraison.localisation);\n            const isStart = index === 0;\n            const isEnd = index === routeData.livraisonsDansOrdre.length - 1;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginBottom: '8px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                style: {\n                  color: isStart ? '#00AA00' : isEnd ? '#CC0000' : '#0066CC'\n                },\n                children: [isStart ? '🚀 ' : isEnd ? '🏁 ' : '📍 ', livraison.adresse]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this), coords && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#666',\n                  fontSize: '0.85em',\n                  marginTop: '2px'\n                },\n                children: [\"Coordonn\\xE9es: \", coords.lat.toFixed(4), \", \", coords.lng.toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 23\n              }, this)]\n            }, livraison.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), directionsResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '15px',\n            padding: '10px',\n            backgroundColor: '#e8f5e8',\n            borderRadius: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0,\n              color: '#00AA00',\n              fontWeight: 'bold'\n            },\n            children: \"\\u2705 Itin\\xE9raire calcul\\xE9 avec succ\\xE8s via l'API Google Directions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1D/BtlWYoI0VodKbtkD8aNaAA90=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GoogleMap","useJsApiLoader","DirectionsRenderer","Marker","jsxDEV","_jsxDEV","mockLivreurs","id","nom","prenom","mockRouteData","livraisonsDansOrdre","adresse","statut","localisation","distanceTotaleMetres","dureeTotaleSecondes","mapContainerStyle","width","height","antananarivoCenter","lat","lng","parseCoords","match","parseFloat","App","_s","_routeData$livraisons","_routeData$livraisons2","map","setMap","livreurs","setLivreurs","selectedLivreurId","setSelectedLivreurId","routeData","setRouteData","directionsResult","setDirectionsResult","isLoading","setIsLoading","error","setError","isLoaded","googleMapsApiKey","libraries","length","calculateDirections","deliveries","window","google","directionsService","maps","DirectionsService","origin","destination","waypoints","slice","delivery","location","stopover","result","Promise","resolve","reject","route","travelMode","TravelMode","DRIVING","optimizeWaypoints","region","response","status","Error","routes","bounds","LatLngBounds","legs","forEach","leg","steps","step","extend","start_location","end_location","fitBounds","err","console","message","handleCalculateRoute","setTimeout","onLoad","callback","mapInstance","onUnmount","directionsOptions","suppressMarkers","polylineOptions","strokeColor","strokeOpacity","strokeWeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","disabled","livreur","onClick","style","color","margin","center","zoom","options","restriction","latLngBounds","north","south","east","west","strictBounds","directions","livraison","index","_window$google","_window$google$maps","_window$google$maps$S","position","label","text","fontWeight","fontSize","title","icon","path","SymbolPath","CIRCLE","fillColor","fillOpacity","scale","display","alignItems","justifyContent","padding","backgroundColor","gridTemplateColumns","gap","marginBottom","toFixed","Math","round","reduce","total","distance","duration","lineHeight","coords","isStart","isEnd","marginTop","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Mialy/Documents/GitHub/cuisine-vital/front-core/src/App.js"],"sourcesContent":["// src/App.js\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { GoogleMap, useJsApiLoader, DirectionsRenderer, Marker } from '@react-google-maps/api';\r\nimport './App.css';\r\n\r\n// --- Données simulées ---\r\nconst mockLivreurs = [\r\n  { id: \"11111111-1111-1111-1111-111111111111\", nom: \"Rabe\", prenom: \"Koto\" },\r\n  { id: \"22222222-2222-2222-2222-222222222222\", nom: \"Rakoto\", prenom: \"Fara\" },\r\n];\r\n\r\nconst mockRouteData = {\r\n  livraisonsDansOrdre: [\r\n    { id: \"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\", adresse: \"Palais de la Reine (Rova), Antananarivo\", statut: \"ASSIGNEE\", localisation: \"Point(47.5323 -18.9227)\" },\r\n    { id: \"dddddddd-dddd-dddd-dddd-dddddddddddd\", adresse: \"Gare de Soarano, Antananarivo\", statut: \"ASSIGNEE\", localisation: \"Point(47.5222 -18.9038)\" },\r\n    { id: \"bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb\", adresse: \"Marché d'Analakely, Antananarivo\", statut: \"ASSIGNEE\", localisation: \"Point(47.5255 -18.9069)\" },\r\n    { id: \"cccccccc-cccc-cccc-cccc-cccccccccccc\", adresse: \"Lac Anosy, Antananarivo\", statut: \"ASSIGNEE\", localisation: \"Point(47.5186 -18.9171)\" },\r\n  ],\r\n  distanceTotaleMetres: 6133,\r\n  dureeTotaleSecondes: 1245,\r\n};\r\n\r\n// --- CONFIGURATION DE LA CARTE ---\r\nconst mapContainerStyle = { width: '100vw', height: '70vh' };\r\nconst antananarivoCenter = { lat: -18.9144, lng: 47.5317 }; // Centre d'Antananarivo\r\n\r\n// --- FONCTION UTILITAIRE ---\r\nconst parseCoords = (localisation) => {\r\n  if (!localisation) return null;\r\n  const match = localisation.match(/Point\\(([+-]?\\d*\\.?\\d+)\\s+([+-]?\\d*\\.?\\d+)\\)/);\r\n  if (!match) return null;\r\n  return { \r\n    lat: parseFloat(match[2]), \r\n    lng: parseFloat(match[1]) \r\n  };\r\n};\r\n\r\nfunction App() {\r\n  const [map, setMap] = useState(null);\r\n  const [livreurs, setLivreurs] = useState([]);\r\n  const [selectedLivreurId, setSelectedLivreurId] = useState('');\r\n  const [routeData, setRouteData] = useState(null);\r\n  const [directionsResult, setDirectionsResult] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // 1. Charger l'API Google Maps\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: 'AIzaSyAOVYRIgupAurZup5y1PRh8Ismb1A3lLao',\r\n    libraries: ['directions'],\r\n  });\r\n\r\n  // 2. Charger les livreurs simulés au démarrage\r\n  useEffect(() => {\r\n    setLivreurs(mockLivreurs);\r\n    if (mockLivreurs.length > 0) {\r\n      setSelectedLivreurId(mockLivreurs[0].id);\r\n    }\r\n  }, []);\r\n\r\n  // 3. Calculer l'itinéraire avec l'API Directions\r\n  const calculateDirections = useCallback(async (deliveries) => {\r\n    if (!isLoaded || !window.google || deliveries.length < 2) return;\r\n\r\n    const directionsService = new window.google.maps.DirectionsService();\r\n    \r\n    // Premier point comme origine\r\n    const origin = parseCoords(deliveries[0].localisation);\r\n    // Dernier point comme destination\r\n    const destination = parseCoords(deliveries[deliveries.length - 1].localisation);\r\n    // Points intermédiaires\r\n    const waypoints = deliveries.slice(1, -1).map(delivery => ({\r\n      location: parseCoords(delivery.localisation),\r\n      stopover: true\r\n    }));\r\n\r\n    try {\r\n      const result = await new Promise((resolve, reject) => {\r\n        directionsService.route({\r\n          origin: origin,\r\n          destination: destination,\r\n          waypoints: waypoints,\r\n          travelMode: window.google.maps.TravelMode.DRIVING,\r\n          optimizeWaypoints: false, // Garder l'ordre défini\r\n          region: 'MG', // Madagascar\r\n        }, (response, status) => {\r\n          if (status === 'OK') {\r\n            resolve(response);\r\n          } else {\r\n            reject(new Error('Erreur lors du calcul de l\\'itinéraire: ' + status));\r\n          }\r\n        });\r\n      });\r\n\r\n      setDirectionsResult(result);\r\n      setError('');\r\n      \r\n      // Ajuster la vue de la carte sur l'itinéraire\r\n      if (map && result.routes[0]) {\r\n        const bounds = new window.google.maps.LatLngBounds();\r\n        result.routes[0].legs.forEach(leg => {\r\n          leg.steps.forEach(step => {\r\n            bounds.extend(step.start_location);\r\n            bounds.extend(step.end_location);\r\n          });\r\n        });\r\n        map.fitBounds(bounds);\r\n      }\r\n      \r\n    } catch (err) {\r\n      console.error('Erreur directions:', err);\r\n      setError('Impossible de calculer l\\'itinéraire: ' + err.message);\r\n      setDirectionsResult(null);\r\n    }\r\n  }, [isLoaded, map]);\r\n\r\n  // 4. Gérer le clic sur le bouton\r\n  const handleCalculateRoute = async () => {\r\n    if (!selectedLivreurId || !isLoaded) return;\r\n    \r\n    setIsLoading(true);\r\n    setError('');\r\n    setDirectionsResult(null);\r\n    setRouteData(null);\r\n\r\n    // Simulation du délai réseau\r\n    setTimeout(async () => {\r\n      if (selectedLivreurId === '11111111-1111-1111-1111-111111111111') {\r\n        setRouteData(mockRouteData);\r\n        // Calculer l'itinéraire réel avec l'API Directions\r\n        await calculateDirections(mockRouteData.livraisonsDansOrdre);\r\n      } else {\r\n        setError('Aucun itinéraire à calculer pour ce livreur.');\r\n      }\r\n      setIsLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  // 5. Fonctions pour gérer l'instance de la carte\r\n  const onLoad = useCallback(function callback(mapInstance) {\r\n    setMap(mapInstance);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(function callback() {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  // 6. Options pour le rendu des directions\r\n  const directionsOptions = {\r\n    suppressMarkers: true, // On va afficher nos propres marqueurs\r\n    polylineOptions: {\r\n      strokeColor: '#FF0000',\r\n      strokeOpacity: 0.8,\r\n      strokeWeight: 5,\r\n    }\r\n  };\r\n\r\n  // 7. Rendu du composant\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Calculateur d'Itinéraire Livreur - Antananarivo</h1>\r\n        <div className=\"controls\">\r\n          <select \r\n            value={selectedLivreurId} \r\n            onChange={(e) => setSelectedLivreurId(e.target.value)}\r\n            disabled={isLoading}\r\n          >\r\n            <option value=\"\">-- Sélectionnez un livreur --</option>\r\n            {livreurs.map(livreur => (\r\n              <option key={livreur.id} value={livreur.id}>\r\n                {livreur.prenom} {livreur.nom}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button \r\n            onClick={handleCalculateRoute} \r\n            disabled={isLoading || !selectedLivreurId || !isLoaded}\r\n          >\r\n            {isLoading ? 'Calcul en cours...' : \"Calculer l'itinéraire\"}\r\n          </button>\r\n        </div>\r\n        {error && <p className=\"error\" style={{color: 'red', margin: '10px 0'}}>{error}</p>}\r\n        {!isLoaded && <p>Chargement de l'API Google Maps...</p>}\r\n      </header>\r\n\r\n      <main>\r\n        {isLoaded ? (\r\n          <GoogleMap\r\n            mapContainerStyle={mapContainerStyle}\r\n            center={antananarivoCenter}\r\n            zoom={13}\r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            options={{\r\n              restriction: {\r\n                latLngBounds: {\r\n                  north: -18.8,\r\n                  south: -19.0,\r\n                  east: 47.7,\r\n                  west: 47.3,\r\n                },\r\n                strictBounds: false,\r\n              },\r\n            }}\r\n          >\r\n            {/* Affichage de l'itinéraire calculé */}\r\n            {directionsResult && (\r\n              <DirectionsRenderer\r\n                directions={directionsResult}\r\n                options={directionsOptions}\r\n              />\r\n            )}\r\n            \r\n            {/* Marqueurs personnalisés pour les points de livraison */}\r\n            {routeData?.livraisonsDansOrdre?.map((livraison, index) => {\r\n              const position = parseCoords(livraison.localisation);\r\n              if (!position) return null;\r\n              \r\n              return (\r\n                <Marker\r\n                  key={livraison.id}\r\n                  position={position}\r\n                  label={{\r\n                    text: `${index + 1}`,\r\n                    color: 'white',\r\n                    fontWeight: 'bold',\r\n                    fontSize: '14px',\r\n                  }}\r\n                  title={`${index + 1}. ${livraison.adresse}`}\r\n                  icon={{\r\n                    path: window.google?.maps?.SymbolPath?.CIRCLE || 0,\r\n                    fillColor: index === 0 ? '#00FF00' : \r\n                             index === routeData.livraisonsDansOrdre.length - 1 ? '#FF0000' : '#4285F4',\r\n                    fillOpacity: 1,\r\n                    strokeColor: 'white',\r\n                    strokeWeight: 2,\r\n                    scale: 15,\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </GoogleMap>\r\n        ) : (\r\n          <div style={{height: '70vh', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n            <p>Chargement de la carte...</p>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Résultats détaillés */}\r\n        {routeData && !error && (\r\n          <div className=\"results\" style={{padding: '20px', backgroundColor: '#f5f5f5', margin: '20px'}}>\r\n            <h2>Résultats de l'itinéraire</h2>\r\n            <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px', marginBottom: '20px'}}>\r\n              <div>\r\n                <p><strong>Distance simulée:</strong> {(routeData.distanceTotaleMetres / 1000).toFixed(2)} km</p>\r\n                <p><strong>Durée simulée:</strong> {Math.round(routeData.dureeTotaleSecondes / 60)} minutes</p>\r\n              </div>\r\n              {directionsResult && directionsResult.routes[0] && (\r\n                <div>\r\n                  <p><strong>Distance réelle:</strong> {(directionsResult.routes[0].legs.reduce((total, leg) => total + leg.distance.value, 0) / 1000).toFixed(2)} km</p>\r\n                  <p><strong>Durée réelle:</strong> {Math.round(directionsResult.routes[0].legs.reduce((total, leg) => total + leg.duration.value, 0) / 60)} minutes</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <h3>Ordre des livraisons:</h3>\r\n            <ol style={{lineHeight: '1.6'}}>\r\n              {routeData.livraisonsDansOrdre?.map((livraison, index) => {\r\n                const coords = parseCoords(livraison.localisation);\r\n                const isStart = index === 0;\r\n                const isEnd = index === routeData.livraisonsDansOrdre.length - 1;\r\n                \r\n                return (\r\n                  <li key={livraison.id} style={{marginBottom: '8px'}}>\r\n                    <strong style={{color: isStart ? '#00AA00' : isEnd ? '#CC0000' : '#0066CC'}}>\r\n                      {isStart ? '🚀 ' : isEnd ? '🏁 ' : '📍 '}\r\n                      {livraison.adresse}\r\n                    </strong>\r\n                    {coords && (\r\n                      <div style={{color: '#666', fontSize: '0.85em', marginTop: '2px'}}>\r\n                        Coordonnées: {coords.lat.toFixed(4)}, {coords.lng.toFixed(4)}\r\n                      </div>\r\n                    )}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ol>\r\n            \r\n            {directionsResult && (\r\n              <div style={{marginTop: '15px', padding: '10px', backgroundColor: '#e8f5e8', borderRadius: '5px'}}>\r\n                <p style={{margin: 0, color: '#00AA00', fontWeight: 'bold'}}>\r\n                  ✅ Itinéraire calculé avec succès via l'API Google Directions\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}